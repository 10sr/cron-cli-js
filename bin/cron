#!/usr/bin/env node

process.title = "cron";

main(process.argv);

function main(argv){
    var argparse = require("argparse");
    var parser = new argparse.ArgumentParser({
        addHelp: true,
    });

    parser.addArgument("crontab", {
        help: "crontab file that defines jobs to schedule, one per line"
    });

    parser.addArgument("--exit-on-failure", {
        help: "Any of jobs ends with status code other than 0, exit with that code",
        action: "storeTrue",
        defaultValue: false
    });

    parser.addArgument("--timezone", {
        help: "Timezone of cron job definitions"
    });

    parser.addArgument("--mailto", {
        help: "Email address to send result to",
        metavar: "ADDRESS"
    });

    parser.addArgument("--smtp-host", {
        help: "SMTP host to use to send emails",
        metavar: "HOST"
    });
    parser.addArgument("--smtp-port", {
        help: "SMTP port to use to send emails",
        type: "int",
        metavar: "PORT"
    });
    parser.addArgument("--smtp-user", {
        help: "SMTP username to use to send emails",
        metavar: "USERNAME"
    });
    parser.addArgument("--smtp-pass", {
        help: "SMTP password to use to send emails",
        metavar: "PASSWORD"
    });

    var args = parser.parseArgs(argv.slice(2));

    var crontab = args.crontab;
    var exitOnFailure = args.exit_on_failure;
    var timeZone = args.timezone;

    // Mail configurations
    var mailto = args.mailto || process.env.CRON_JS_MAILTO || null;
    var smtpHost = args.smtp_host || process.env.CRON_JS_SMTP_HOST || null;
    var smtpPort = args.smtp_port || parseInt(process.env.CRON_JS_SMTP_PORT, 10) || -1;
    var smtpUser = args.smtp_user || process.env.CRON_JS_SMTP_USER || null;
    var smtpPass = args.smtp_pass || process.env.CRON_JS_SMTP_PASS || null;

    var smtpSecure = (smtpPort === 465);

    var cron = require("../lib");
    cron.start(crontab, {
        exitOnFailure: exitOnFailure,
        timeZone: timeZone,
        mailto: mailto,
        smtpHost: smtpHost,
        smtpPort: smtpPort,
        smtpSecure: smtpSecure,
        smtpUser: smtpUser,
        smtpPass: smtpPass
    })
    return;
}
